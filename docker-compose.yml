services:
  sql-generator:
    image: alpine:latest
    container_name: sql-generator
    volumes:
      - ./db-init:/db-init:z
    working_dir: /db-init
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_HOST=${DB_HOST}
      - REPLICATION_USER=${REPLICATION_USER}
      - REPLICATION_PASSWORD=${REPLICATION_PASSWORD}
      - REPLICATION_DELAY=${REPLICATION_DELAY}
    entrypoint: /bin/sh -c "
      rm -rfv /db-init/sql-files;
      apk update && apk add dos2unix gettext mariadb-client &&  
      echo 'Listing /db-init directory:'; ls -l /db-init && 
      if [ -f /db-init/generate-sql.sh ]; then 
        echo 'Converting generate-sql.sh to Unix line endings...'; 
        dos2unix /db-init/generate-sql.sh;  
        echo 'Making generate-sql.sh executable...'; 
        chmod +x /db-init/generate-sql.sh;  
        echo 'Checking script permissions:'; ls -l /db-init/generate-sql.sh; 
        echo 'Running SQL generation script...'; 
        /bin/sh -x /db-init/generate-sql.sh;  
        echo 'SQL file generated successfully!'; 
      else 
        exit 1; 
      fi"
    healthcheck:
      test: ["CMD", "test", "-f", "/db-init/sql-files/primary/create-users.sql"]
      interval: 5s
      retries: 5
      
  mariadb:
    image: mariadb:10.11 
    container_name: mariadb
    depends_on:
      sql-generator:
        condition: service_healthy
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=yes
    volumes:
      - mariadb-data:/var/lib/mysql:z
      - ./db-init/sql-files/primary/:/docker-entrypoint-initdb.d/:z
      - ./mariadb/config/primary.cnf:/etc/mysql/conf.d/primary.cnf:z
      - ./mariadb/entrypoint-primary.sh:/usr/local/bin/entrypoint.sh:z
    entrypoint: ["/bin/bash", "/usr/local/bin/entrypoint.sh"]

  mariadb-replica:
    image: mariadb:10.11 
    container_name: mariadb-replica
    depends_on:
      - mariadb
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_PASSWORD=${REPLICATION_PASSWORD}
      - MYSQL_USER=${REPLICATION_USER}
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=yes
    volumes:
      - mariadb-replica:/var/lib/mysql:z
      - ./db-init/sql-files/replica/:/docker-entrypoint-initdb.d/:z
      - ./mariadb/config/replica.cnf:/etc/mysql/conf.d/replica.cnf:z
      - ./mariadb/entrypoint-replica.sh:/usr/local/bin/entrypoint.sh:z
    entrypoint: ["/bin/bash", "/usr/local/bin/entrypoint.sh"]

  laravel:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-api
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html:z  # Mount the backend directory
      - ./.env:/var/www/.env:z 
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_NAME}
      - DB_USERNAME=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - UNSPLASH_ACCESS_KEY=${UNSPLASH_ACCESS_KEY}

  vuejs:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue-frontend
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app:z         # Corrected with :z
      - /app/node_modules         # No :z needed since this is an internal container directory
    command: npm run serve

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mariadb
    ports:
      - "8081:80"
    depends_on:
      - mariadb

volumes:
  mariadb-data:
  mariadb-replica: